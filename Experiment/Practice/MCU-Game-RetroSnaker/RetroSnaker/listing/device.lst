C51 COMPILER V9.01   DEVICE                                                                10/18/2024 00:18:59 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE DEVICE
OBJECT MODULE PLACED IN .\object\device.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE device\device.c BROWSE INCDIR(.\device) DEBUG OBJECTEXTEND PRINT(.\listi
                    -ng\device.lst) OBJECT(.\object\device.obj)

line level    source

   1          #include "device.h"
   2          
   3          void time0_init(void)
   4          {
   5   1          TMOD |= 0x01;
   6   1          TH0 = 0xFC;
   7   1          TL0 = 0x18;
   8   1          ET0 = 1;
   9   1          EA = 1;
  10   1          TR0 = 1;
  11   1      }
  12          
  13          void time1_init(void)
  14          {
  15   1          TMOD |= 0x01;
  16   1          TH1 = 0xFC;
  17   1          TL1 = 0x18;
  18   1          ET1 = 1;
  19   1          EA = 1;
  20   1          TR1 = 1;
  21   1      }
  22          
  23          void hc595_write_data(uchar8_t dat)
  24          {
  25   1          uchar8_t i = 0;
  26   1          for (i = 0; i < 8; i++)
  27   1          {
  28   2              SER = dat >> 7;
  29   2              dat <<= 1;
  30   2              SRCLK = 0;
  31   2              delay_10us(1);
  32   2              SRCLK = 1;
  33   2              delay_10us(1);
  34   2          }
  35   1          RCLK = 1;
  36   1          delay_10us(1);
  37   1          RCLK = 0;
  38   1      }
  39          
  40          void led_maxtir_dispaly(char8_t dat[])
  41          {
  42   1          hc595_write_data(dat[0]);
  43   1          LED_MAXTIR_CONTROL_PORT = dat[1];
  44   1      }
  45          
  46          void delay_10us(uint16_t s) //@11.0592MHz
  47          {
  48   1          uint16_t i = 2 * s;
  49   1          while (--i)
  50   1              ;
  51   1      }
  52          
  53          uchar8_t maxtir_flip_scan(void)
  54          {
C51 COMPILER V9.01   DEVICE                                                                10/18/2024 00:18:59 PAGE 2   

  55   1          static uchar8_t key_value = 0;
  56   1          static uchar8_t key_lock = 1;
  57   1          KEY_MATRIX_PORT = 0x0f;
  58   1          if (key_lock == 1 && KEY_MATRIX_PORT != 0x0f)
  59   1          {
  60   2              key_lock = 0;
  61   2              delay_10us(1000);
  62   2              if (KEY_MATRIX_PORT != 0x0f)
  63   2              {
  64   3                  KEY_MATRIX_PORT = 0x0f;
  65   3                  switch (KEY_MATRIX_PORT)
  66   3                  {
  67   4                  case 0x07:
  68   4                      key_value = 1;
  69   4                      break;
  70   4                  case 0x0b:
  71   4                      key_value = 2;
  72   4                      break;
  73   4                  case 0x0d:
  74   4                      key_value = 3;
  75   4                      break;
  76   4                  case 0x0e:
  77   4                      key_value = 4;
  78   4                      break;
  79   4                  }
  80   3              }
  81   2              KEY_MATRIX_PORT = 0xf0;
  82   2              switch (KEY_MATRIX_PORT)
  83   2              {
  84   3              case 0x70:
  85   3                  key_value = key_value;
  86   3                  break;
  87   3              case 0xb0:
  88   3                  key_value += 4;
  89   3                  break;
  90   3              case 0xd0:
  91   3                  key_value += 8;
  92   3                  break;
  93   3              case 0xe0:
  94   3                  key_value += 12;
  95   3                  break;
  96   3              }
  97   2          }
  98   1          else
  99   1          {
 100   2              if (KEY_MATRIX_PORT == 0x0f)
 101   2              {
 102   3                  key_lock = 1;
 103   3              }
 104   2              key_value = 0;
 105   2          }
 106   1          return key_value;
 107   1      }
 108          
 109          // uint16_t rand(uint16_t seed)
 110          // {
 111          //     uint16_t a = 11035152;
 112          //     uint16_t c = 12345;
 113          //     uint16_t m = 65535;
 114          //     return (a * seed + c) % m;
 115          // }

C51 COMPILER V9.01   DEVICE                                                                10/18/2024 00:18:59 PAGE 3   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    260    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
