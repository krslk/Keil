C51 COMPILER V9.01   GAME_DRAW                                                             10/18/2024 00:18:59 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE GAME_DRAW
OBJECT MODULE PLACED IN .\object\game_draw.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE device\game_draw.c BROWSE INCDIR(.\device) DEBUG OBJECTEXTEND PRINT(.\li
                    -sting\game_draw.lst) OBJECT(.\object\game_draw.obj)

line level    source

   1          #include "game_draw.h"
   2          
   3          void snake_init(Snake *snake)
   4          {
   5   1          snake->dir = UP;
   6   1          snake->speed = 1;
   7   1          snake->length = 2;
   8   1          snake->snake_pos[0][0] = 2;
   9   1          snake->snake_pos[0][1] = 6;
  10   1          snake->snake_pos[1][0] = 1;
  11   1          snake->snake_pos[1][1] = 6;
  12   1      }
  13          
  14          void snake_pos_change(Snake *snake, uint16_t r, uint16_t c)
  15          {
  16   1          uint16_t i;
  17   1          for (i = 0; i < snake->length - 1; i++)
  18   1          {
  19   2              snake->snake_pos[i + 1][0] = snake->snake_pos[i][0];
  20   2              snake->snake_pos[i + 1][1] = snake->snake_pos[i][1];
  21   2          }
  22   1          if (r < 0)
  23   1          {
  24   2              snake->snake_pos[0][0] = snake->snake_pos[0][0] == 0 ? 7 : snake->snake_pos[0][0] - 1;
  25   2          }
  26   1          else
  27   1          {
  28   2              snake->snake_pos[0][0] = (snake->snake_pos[0][0] + r) % 8;
  29   2          }
  30   1          if (c < 0)
  31   1          {
  32   2              snake->snake_pos[0][1] = snake->snake_pos[0][1] == 0 ? 7 : snake->snake_pos[0][1] - 1;
  33   2          }
  34   1          else
  35   1          {
  36   2              snake->snake_pos[0][1] = (snake->snake_pos[0][1] + c) % 8;
  37   2          }
  38   1      }
  39          
  40          void snake_move(Snake *snake)
  41          {
  42   1          switch (snake->dir)
  43   1          {
  44   2          case UP:
  45   2              snake_pos_change(snake, 1, 0);
  46   2              break;
  47   2          case DOWN:
  48   2              snake_pos_change(snake, -1, 0);
  49   2              break;
  50   2          case LEFT:
  51   2              snake_pos_change(snake, 0, 1);
  52   2              break;
  53   2          case RIGHT:
  54   2              snake_pos_change(snake, 0, -1);
C51 COMPILER V9.01   GAME_DRAW                                                             10/18/2024 00:18:59 PAGE 2   

  55   2              break;
  56   2          }
  57   1      }
  58          
  59          void show_snake(Snake snake)
  60          {
  61   1          uchar8_t i = 0;
  62   1          char8_t dat[2] = {0x00, 0x00};
  63   1          for (i = 0; i < snake.length; i++)
  64   1          {
  65   2              dat[0] |= (1 << snake.snake_pos[i][0]);
  66   2              dat[1] |= (1 << snake.snake_pos[i][1]);
  67   2          }
  68   1          dat[1] = ~dat[1];
  69   1          led_maxtir_dispaly(dat);
  70   1      }
  71          
  72          // void show_food(uint16_t x, uint16_t y)
  73          // {
  74          //     uchar8_t buf = 0x00;
  75          //     buf = (1 << y);
  76          //     hc595_write_data(buf);
  77          //     buf = 0x00;
  78          //     buf = (1 << x);
  79          //     LED_MAXTIR_CONTROL_PORT = ~buf;
  80          // }
  81          
  82          void snake_change_dir(Snake *snake, uchar8_t k)
  83          {
  84   1          switch (k)
  85   1          {
  86   2          case 2:
  87   2              if (snake->dir != DOWN)
  88   2              {
  89   3                  snake->dir = UP;
  90   3              }
  91   2              break;
  92   2          case 10:
  93   2              if (snake->dir != UP)
  94   2              {
  95   3                  snake->dir = DOWN;
  96   3              }
  97   2              break;
  98   2          case 5:
  99   2              if (snake->dir != RIGHT)
 100   2              {
 101   3                  snake->dir = LEFT;
 102   3              }
 103   2              break;
 104   2          case 7:
 105   2              if (snake->dir != LEFT)
 106   2              {
 107   3                  snake->dir = RIGHT;
 108   3              }
 109   2              break;
 110   2          }
 111   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    499    ----
   CONSTANT SIZE    =      2    ----
C51 COMPILER V9.01   GAME_DRAW                                                             10/18/2024 00:18:59 PAGE 3   

   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      49
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
