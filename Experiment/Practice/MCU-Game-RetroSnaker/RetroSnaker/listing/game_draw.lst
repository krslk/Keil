C51 COMPILER V9.01   GAME_DRAW                                                             10/19/2024 00:33:18 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE GAME_DRAW
OBJECT MODULE PLACED IN .\object\game_draw.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE device\game_draw.c BROWSE INCDIR(.\device) DEBUG OBJECTEXTEND PRINT(.\li
                    -sting\game_draw.lst) OBJECT(.\object\game_draw.obj)

line level    source

   1          #include "game_draw.h"
   2          
   3          void snake_init(Snake *snake)
   4          {
   5   1          snake->dir = UP;
   6   1          snake->speed = 1;
   7   1          snake->length = 2;
   8   1          snake->max_len = 15;
   9   1          snake->snake_pos[0][0] = 2;
  10   1          snake->snake_pos[0][1] = 6;
  11   1          snake->snake_pos[1][0] = 1;
  12   1          snake->snake_pos[1][1] = 6;
  13   1          snake->snake_pos[2][0] = 0;
  14   1          snake->snake_pos[2][1] = 6;
  15   1      }
  16          
  17          void snake_pos_change(Snake *snake, uint16_t r, uint16_t c)
  18          {
  19   1          uint16_t i;
  20   1          for (i = snake->length - 1; i > 0; i--)
  21   1          {
  22   2              snake->snake_pos[i][0] = snake->snake_pos[i - 1][0];
  23   2              snake->snake_pos[i][1] = snake->snake_pos[i - 1][1];
  24   2          }
  25   1          if (r < 0)
  26   1          {
  27   2              snake->snake_pos[0][0] = snake->snake_pos[0][0] == 0 ? 7 : snake->snake_pos[0][0] - 1;
  28   2          }
  29   1          else
  30   1          {
  31   2              snake->snake_pos[0][0] = (snake->snake_pos[0][0] + r) % 8;
  32   2          }
  33   1          if (c < 0)
  34   1          {
  35   2              snake->snake_pos[0][1] = snake->snake_pos[0][1] == 0 ? 7 : snake->snake_pos[0][1] - 1;
  36   2          }
  37   1          else
  38   1          {
  39   2              snake->snake_pos[0][1] = (snake->snake_pos[0][1] + c) % 8;
  40   2          }
  41   1      }
  42          
  43          void snake_move(Snake *snake, Food *food)
  44          {
  45   1          switch (snake->dir)
  46   1          {
  47   2          case UP:
  48   2              snake_pos_change(snake, 1, 0);
  49   2              break;
  50   2          case DOWN:
  51   2              snake_pos_change(snake, -1, 0);
  52   2              break;
  53   2          case LEFT:
  54   2              snake_pos_change(snake, 0, 1);
C51 COMPILER V9.01   GAME_DRAW                                                             10/19/2024 00:33:18 PAGE 2   

  55   2              break;
  56   2          case RIGHT:
  57   2              snake_pos_change(snake, 0, -1);
  58   2              break;
  59   2          }
  60   1          if (snake->snake_pos[0][0] == food->r && snake->snake_pos[0][1] == food->c)
  61   1          {
  62   2              food->tag = 1;
  63   2              eat_food(snake);
  64   2          }
  65   1      }
  66          
  67          void show_snake(Snake snake)
  68          {
  69   1          uchar8_t i = 0;
  70   1          char8_t dat[2] = {0x00, 0x00};
  71   1          for (i = 0; i < snake.length; i++)
  72   1          {
  73   2              LED_MAXTIR_CONTROL_PORT = 0XFF;
  74   2              dat[0] = (1 << snake.snake_pos[i][0]);
  75   2              dat[1] = (1 << snake.snake_pos[i][1]);
  76   2              dat[1] = ~dat[1];
  77   2              led_maxtir_dispaly(dat);
  78   2          }
  79   1      }
  80          
  81          void show_food(uint16_t r, uint16_t c)
  82          {
  83   1          LED_MAXTIR_CONTROL_PORT = 0XFF;
  84   1          hc595_write_data((1 << r));
  85   1          LED_MAXTIR_CONTROL_PORT = ~(1 << c);
  86   1      }
  87          
  88          void snake_change_dir(Snake *snake, uchar8_t k)
  89          {
  90   1          switch (k)
  91   1          {
  92   2          case 2:
  93   2              if (snake->dir != DOWN)
  94   2              {
  95   3                  snake->dir = UP;
  96   3              }
  97   2              break;
  98   2          case 10:
  99   2              if (snake->dir != UP)
 100   2              {
 101   3                  snake->dir = DOWN;
 102   3              }
 103   2              break;
 104   2          case 5:
 105   2              if (snake->dir != RIGHT)
 106   2              {
 107   3                  snake->dir = LEFT;
 108   3              }
 109   2              break;
 110   2          case 7:
 111   2              if (snake->dir != LEFT)
 112   2              {
 113   3                  snake->dir = RIGHT;
 114   3              }
 115   2              break;
 116   2          }
C51 COMPILER V9.01   GAME_DRAW                                                             10/19/2024 00:33:18 PAGE 3   

 117   1      }
 118          
 119          void eat_food(Snake *snake)
 120          {
 121   1          if (snake->length + 1 <= snake->max_len)
 122   1          {
 123   2              snake->length++;
 124   2          }
 125   1          snake->speed++;
 126   1      }
 127          
 128          void refresh_food_pos(Food *food, uint16_t seed)
 129          {
 130   1          food->c = rand(seed);
 131   1          food->r = rand(seed * 9 % 8);
 132   1          food->tag = 0;
 133   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    763    ----
   CONSTANT SIZE    =      2    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      62
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
